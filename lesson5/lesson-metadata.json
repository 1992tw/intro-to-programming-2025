{
  "id": "687970c4a4ac7ef2a17a63a0",
  "lessonNumber": 5,
  "title": "Get ready for git!",
  "status": "pending",
  "assignment": {
    "title": "Assignment for Lesson 5",
    "objective": "No objective specified",
    "expectedCapabilities": [],
    "instructions": [],
    "tasks": [
      {
        "taskNumber": 1,
        "title": "Task 1",
        "description": "### Prepare to code!\nIf you don't already have an IDE you prefer to use, and if you haven't yet completed the \"Get ready for git!\" section from last week's lesson, do so now.  That involves downloading and installing Visual Studio Code and getting yourself familiar with it and it's tools.  So you don't have to jump back to last week, here is the [link to download Visual Studio Code](https://code.visualstudio.com/) and the video on how to find your way around it:\n[Visual Studio Code Info Session with Shawn Clary](https://www.youtube.com/watch?v=R8lusLkuWJQ)\n\nOnce you have your local machine setup, it's time to create a repository in your cloud-based git repository on GitHub...\n\n### Create a new repository \nCreate a new repository in your GitHub account by following these steps:\n   - [ ] Go to your GitHub page and click the Repositories tab\n   - [ ] Click the green \"New\" button in the top right\n   - [ ] Fill in the fields to give your repository a name (use your name-**_classname_** as the name example: `maria-santiago-jupiter`) and description (example: portfolio project for Intro to Programming course with Code the Dream)\n   - [ ] Be sure PUBLIC is selected and check the \"Initialize this repository with: Add a README file\" check box.\n   - [ ] Click \"Create Repository\"\n\n### Clone to your local machine\nCopy the repository you just created in GitHub to your local computer by following these steps:\n   - [ ] On the main Code page of your repository, click the green \"Code\" button\n   - [ ] Your lesson walked you through setting up an SSH key with GitHub.  You should select \"SSH\" as the Local Clone type (not HTTPS or GitHub CLI).\n   - [ ] Click the copy button (two overlapping squares icon) to copy your repository address.  It should look like `git@github.com:yourUsernameHere/firstname-lastname-class.git`\n   - [ ] Go to your IDE terminal or your computer terminal.  Make sure you're in the proper directory for where you want to create and store files for your work (ex. your Desktop or a CodeTheDream folder).  Then run `git clone <repository>` where \"\\<repository\\>\" is replaced with the last portion you copied in the last step.\n\n### Get organized and write some code!\n   - [ ] Navigate into the directory you just cloned by running `cd <name-classname>` in the terminal where the <name-classname> portion is the name of your repository.\n   - [ ] Create a new local branch to house just the work you'll do for this assignment by running `git checkout -b lesson-5` in the terminal\n   - [ ] Open the README.md file in your code editor and add your full name.\n   - [ ] Create a new file in your project directory (same level as your README.md file) and title it `index.html`\n\n### Backup to the cloud\nMake sure your code gets copied to GitHub by adding changes to staging, committing the staged changes, and pushing them from your local machine to GitHub.\n   - [ ] Check the status of the changes you just made (editing the readme.md file and making a new index.html file) by running `git status` in your terminal\n   - [ ] Stage all your changes for commit by running `git add .` in your terminal\n   - [ ] Run `git status` again to see how things have changed.  You should get a response indicating changes staged for commit.\n   - [ ] Create a commit message for reference.  Run `git commit -m \"my first commit\"`\n   - [ ] Push these changes to your GitHub repository from your local computer by running `git push origin lesson-5`\n   - [ ] **NOTE:** if you get a \"fatal: The current branch...\" error message.  READ the message and follow the instructions in that message to confirm that you push your work to your GitHub account.\n\n**_By this point, you should have a local folder on your machine that has a README.md and index.html file, and your lesson-5 branch of your GitHub repository should also have your README.md and index.html files.  You can find your lesson-5 branch by clicking on the main button in your GitHub repository.  You should see the list of all your branches (main and lesson-5) there.  See image below for example:_**\n\n![branch drop down in GitHub repository](https://github.com/Code-the-Dream-School/intro-to-programming-2024/blob/5e3d47bcdc1ad5b6a72a75cc5694f459ce0b5024/mainBranch.png?raw=true)\n\n### Submit Assignment\nNow let's make sure that lesson branch will be reviewed.\n   - [ ] Go to your GitHub repository page in your web browser now, and you should see a \"lesson-5 has a recent push\" notice with a green \"Compare & pull request\" button.  Click that button\n   - [ ] Feel free to put notes to yourself or notes for your reviewer in the description (be sure you're including any questions to your reviewer in your assignment submission form though!) and click the green \"Create pull request\" button.\n   - [ ] Copy the address of your pull request page (should look like `https://github.com/yourUsername/name-classname/pull/1`) and paste it into your assignment submission form.\n\n### What next?\n   - If you're on track with class, wait to get feedback and/or the email notice that your assignment review is complete before confirming and merging your pull request to the main branch.\n   - If you're behind or are working ahead:  \n     - if you're confident your work is accurate, merge your pull request and continue working through class.\n     - if you're not sure about your work this week, schedule a 1:1 session with a mentor and review your work together before merging.\n    \n### REMINDER\nIf you are completing work on the Algorithms Stretch Goal this lesson, you should go to your \"Lesson 4 - Array Methods and Algorithm Stretch Goal\" repl from last week's coding assignment and work on the practice exercises below the \"Stretch Goal on Algorithms Below\" header in the code.\n",
        "codeExample": "",
        "_id": "687970c4a4ac7ef2a17a63a2"
      }
    ],
    "submissionInstructions": "Please submit on time",
    "checklist": [],
    "checkForUnderstanding": []
  },
  "subsections": [
    {
      "subsectionOrder": 1,
      "title": "Lesson 5",
      "content": "# Get ready for git!\n\nThis week you'll be learning about git version control, and you'll start using a cloud-based git repository program called GitHub to complete your coding assignments.  There are several programs developers use as they build, test, and deploy/publish their code.  While you're welcome to use any tools/combination of tools you prefer, we recommend using [Visual Studio Code](https://code.visualstudio.com/).  Visual Studio Code is an IDE (Integrated Development Environment).  IDEs are helpful programs that combine several tools (a text editor, the command line/terminal, file organization, and more) into one program.  If you aren't currently using an IDE of your own preference, you should watch the video below and install Visual Studio Code and suggested extensions in the video before you start this week's assignment.\n\n[Visual Studio Code Info Session with Shawn Clary](https://www.youtube.com/watch?v=R8lusLkuWJQ)\n\nRemember to please go to each link in this list and read through the content on that page. If there are links you are redirected to as you read/work through the content, follow those links as well and read the content there also.\n\n- **[The Odin Project – Text Editors](https://www.theodinproject.com/paths/foundations/courses/foundations/lessons/text-editors)**\n- **[The Odin Project – Command Line Basics](https://www.theodinproject.com/paths/foundations/courses/foundations/lessons/command-line-basics-web-development-101)**\n- **[The Odin Project – Setting Up Git](https://www.theodinproject.com/paths/foundations/courses/foundations/lessons/setting-up-git)**\n- **[The Odin Project – Introduction to Git](https://www.theodinproject.com/paths/foundations/courses/foundations/lessons/introduction-to-git)**\n- **[The Odin Project – Git Basics](https://www.theodinproject.com/paths/foundations/courses/foundations/lessons/git-basics)**\n\n\n\n***\n\n## _**STRETCH GOAL (OPTIONAL): Intro to Algorithms**_\n- **[Scrimba](https://v2.scrimba.com/javascript-interview-challenges-c02c/~00) - JavaScript Interview Challenges**\n- Watch and practice the first 5 videos (with solutions). Try to solve each algorithm before you watch the solution. The more you practice the more comfortable you will you get, which is good preparation for job interviewing.\n\n### Algorithms\n\nThink about it: you've been low-key using algorithms since your elementary school days. Yep, those step-by-step instructions for multiplying numbers? Bingo, those are algorithms!\n\nNow, let's break it down a bit. An **algorithm** is like a super precise recipe for solving a computer puzzle. Simple, right? But wait, what's a **computational problem**? Well, it's basically a riddle that a computer can help us solve. For example, think about sorting a jumbled mess of numbers into a neat little order. That's a computational problem.\n\nSo, when we talk about problems, we're talking about spelling them out really clearly. That means telling the computer exactly what it's working with – the stuff going in, what's supposed to come out, and how they're all connected. This is similar to using AI as well. You have to write a very detailed prompt when communicating with AI or you may get missing or incorrect information back.\n\nAn algorithm is like a secret recipe that lays out a series of steps. If you stick to those steps exactly as they're written, voilà, you'll solve the problem! It's like having multiple paths to victory in a game – as long as you follow the rules, you'll win!\n\n1. Read this [article](https://www.theodinproject.com/lessons/javascript-a-very-brief-intro-to-cs) on Odin. \n2. Read this [article](https://www.geeksforgeeks.org/introduction-to-algorithms/).  We won’t be getting into the types of algorithms but it’s a good overview of how algorithms are part of a developer’s daily life. \n3. Once again, same info, but [a video](https://www.khanacademy.org/computing/computer-science/algorithms/intro-to-algorithms/v/what-are-algorithms) from Khan Academy.\n\n",
      "videoUrl": "",
      "codeExamples": [],
      "externalLinks": [],
      "quizzes": [],
      "_id": "687970c4a4ac7ef2a17a63a1"
    }
  ]
}